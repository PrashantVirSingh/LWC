<template>

  <div>Courses name</div>

  <template for:each={course} for:item="ct" for:index="index">

   <li key={ct.Id}>Position: {index}<br>
    {ct.Name} = {ct.Course}
   </li>
  </template>
  
</template>

import { LightningElement} from 'lwc';
export default class ChildCmp extends LightningElement {
  

    course =[];

    singlecourse;

    connectedCallback(){

       this.course =[

           {Id:1,Name:'Prashant', Course:'Salesforce'},

           {Id:2,Name:'Veer',Course:'LWC'},

           {Id:3,Name:'Prashant', Course:'Apex'},

           {Id:4,Name:'Veer', Course:'Experience cloud'},

           {Id:5,Name:'Veer', Course:'Salesforce'},
       ];
    }
}


=================Example 2=====================

<template>

  <lightning-button label="update" onclick={updateContacts}></lightning-button>

  <ul>
    <template for:each ={contacts} for:item="contact">

      <li key={contact.id}>
        {contact.name} - {contact.role}
      </li>

    </template>
  </ul>
  
</template>

import { LightningElement, track} from 'lwc';
export default class ChildCmp extends LightningElement {
  


    contacts=[
        {id: 1, name: 'Prashant', role: 'CEO'},
        {id: 2, name: 'Rahul',role: 'CTO'},
        {id: 3, name: 'Ram',role: 'CFO'},
        {id: 4, name: 'Shyam',role: 'Developer'},
        {id: 5, name: 'Rahul',role: 'Developer'},
    ];


    updateContacts(){
        const updateCt=[];
        for(const contact of this.contacts){
            if(contact.id === 5){
                const updatedCts={...contact, role: 'Lead Developer'};
                updateCt.push(updatedCts);
            }else{
                updateCt.push(contact);
            }}

            this.contacts=updateCt;
    }
}
